{"version":3,"sources":["screens/project-list/last-searches.jsx","screens/project-list/list.jsx","components/input-with-label.jsx","components/pressed-button.jsx","screens/project-list/search-form.jsx","screens/project-list/index.jsx","utils/use-semi-persistent.js","App.js","reportWebVitals.js","index.js"],"names":["SearchContainer","styled","div","StyledButton","button","LastSearches","lastSearches","handleLastSearch","map","searchTerm","index","type","onClick","TableHeader","HeaderItem","span","List","list","onRemoveItem","SORTS","NONE","TITLE","sortBy","AUTHOR","COMMENT","reverse","POINT","useState","sortKey","isReverse","sort","setSort","handleSort","sortFunction","sortedList","style","width","item","objectID","Item","StyledItem","StyledColumn","href","url","title","author","num_comments","points","StyledButtonSmall","props","InputWithLabel","id","label","value","onInputChange","children","isFocused","inputRef","useRef","useEffect","current","focus","StyledLabel","htmlFor","StyledInput","onChange","ref","input","Container","Base","ButtonWrapper","ButtonMain","ButtonInsilde","PressedBtn","handleSearchSubmit","ontouchstart","className","StyledSearchForm","form","SearchForm","handleSearchInput","onSubmit","StyledContainer","StyledHeadlinePrimary","active","ProjectList","key","initialState","localStorage","getItem","setValue","setItem","useSemiPersistent","setSearchTerm","PARAM_SEARCH","getUrl","page","urls","setUrls","useReducer","state","action","isLoading","isError","data","payload","concat","filter","story","Error","stories","dispatchStories","extractSearchTerm","substring","lastIndexOf","replace","handleSearch","reduce","result","length","slice","getLastSearches","handleFetchStories","useCallback","a","lastUrl","axios","get","hits","searchedStories","toLowerCase","includes","isScrolled","setIsScrolled","mainContainer","document","addEventListener","elemTop","getBoundingClientRect","top","color","event","preventDefault","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aa9f3e47.chunk.js","sourcesContent":["import styled from 'styled-components';\nconst LastSearches = ({ lastSearches, handleLastSearch }) => {\n    return (\n        <SearchContainer>\n            {lastSearches.map((searchTerm, index) => (\n                <StyledButton\n                    key={searchTerm + index}\n                    type=\"button\"\n                    onClick={() => handleLastSearch(searchTerm)}\n                >\n                    {searchTerm}\n                </StyledButton>\n            ))}\n        </SearchContainer>\n    );\n};\nconst SearchContainer = styled.div`\n    display: flex;\n\n    & > button {\n        margin-right: 5px;\n    }\n`;\nconst StyledButton = styled.button`\n    min-width: 32px;\n    min-height: 29px;\n    background: transparent;\n    border: 1px solid #171212;\n    padding: 5px;\n    cursor: pointer;\n\n    transition: all 0.1s ease-in;\n\n    &:hover {\n        background: #171212;\n        color: #ffffff;\n        border-color: #666;\n    }\n`;\nexport default LastSearches;\n","import { sortBy } from 'lodash';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nconst List = ({ list, onRemoveItem }) => {\n    // sort list\n    const SORTS = {\n        NONE: list => list,\n        TITLE: list => sortBy(list, 'title'),\n        AUTHOR: list => sortBy(list, 'author'),\n        COMMENT: list => sortBy(list, 'num_comments').reverse(),\n        POINT: list => sortBy(list, 'points').reverse(),\n    };\n    const [sort, setSort] = useState({\n        sortKey: 'NONE',\n        isReverse: false,\n    });\n\n    const handleSort = sortKey => {\n        const isReverse = sort.sortKey === sortKey && !sort.isReverse;\n        setSort({ sortKey, isReverse });\n    };\n\n    const sortFunction = SORTS[sort.sortKey];\n    const sortedList = sort.isReverse\n        ? sortFunction(list).reverse()\n        : sortFunction(list);\n\n    return (\n        <div>\n            <TableHeader>\n                <HeaderItem style={{ width: '40%' }}>\n                    <button type=\"button\" onClick={() => handleSort('TITLE')}>\n                        Title\n                    </button>\n                </HeaderItem>\n                <HeaderItem style={{ width: '30%' }}>\n                    <button type=\"button\" onClick={() => handleSort('AUTHOR')}>\n                        Author\n                    </button>\n                </HeaderItem>\n                <HeaderItem style={{ width: '10%' }}>\n                    <button type=\"button\" onClick={() => handleSort('COMMENT')}>\n                        Comments\n                    </button>\n                </HeaderItem>\n                <HeaderItem style={{ width: '10%' }}>\n                    <button type=\"button\" onClick={() => handleSort('POINT')}>\n                        Points\n                    </button>\n                </HeaderItem>\n                <HeaderItem style={{ width: '10%' }}>Actions</HeaderItem>\n            </TableHeader>\n\n            {sortedList.map(item => (\n                <Item\n                    key={item.objectID}\n                    item={item}\n                    onRemoveItem={onRemoveItem}\n                />\n            ))}\n        </div>\n    );\n};\n\nconst TableHeader = styled.div`\n    display: flex;\n    font-size: 1.6rem;\n    font-weight: 600;\n`;\n\nconst HeaderItem = styled.span`\n    padding: 0 5px;\n    button {\n        border: 0;\n        background: transparent;\n        font-size: 1.6rem;\n        font-weight: 600;\n        cursor: pointer;\n        outline: none;\n        position: relative;\n    }\n\n    button::before {\n        content: '';\n        width: 0;\n        height: 0;\n        position: absolute;\n        top: 10px;\n        right: -6px;\n        border-right: 5px solid transparent;\n        border-left: 5px solid transparent;\n        border-top: 8px solid #999;\n    }\n    button::after {\n        content: '';\n        width: 0;\n        height: 0;\n        position: absolute;\n        right: -6px;\n        border-right: 5px solid transparent;\n        border-left: 5px solid transparent;\n        border-bottom: 8px solid #999;\n    }\n`;\nexport default List;\n\n// Item component\nconst Item = ({ item, onRemoveItem }) => (\n    <StyledItem>\n        <StyledColumn width=\"40%\">\n            <a href={item.url}>{item.title}</a>\n        </StyledColumn>\n        <StyledColumn width=\"30%\">{item.author}</StyledColumn>\n        <StyledColumn width=\"10%\">{item.num_comments}</StyledColumn>\n        <StyledColumn width=\"10%\">{item.points}</StyledColumn>\n        <StyledColumn width=\"10%\">\n            <StyledButtonSmall type=\"button\" onClick={() => onRemoveItem(item)}>\n                Dismiss\n            </StyledButtonSmall>\n        </StyledColumn>\n    </StyledItem>\n);\n\nconst StyledItem = styled.div`\n    display: flex;\n    align-items: center;\n    padding-bottom: 5px;\n`;\n\nconst StyledColumn = styled.span`\n    padding: 0 5px;\n    white-space: nowrap;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n\n    a {\n        color: inherit;\n    }\n\n    width: ${props => props.width};\n`;\n\nconst StyledButton = styled.button`\n    background: transparent;\n    border: 1px solid #171212;\n    padding: 5px;\n    cursor: pointer;\n\n    transition: all 0.1s ease-in;\n\n    &:hover {\n        background: #171212;\n        color: #ffffff;\n    }\n`;\n\nconst StyledButtonSmall = styled(StyledButton)`\n    padding: 5px;\n`;\n","import { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nconst InputWithLabel = ({\n    id,\n    label,\n    value,\n    type = 'text',\n    onInputChange,\n    children,\n    isFocused,\n}) => {\n    const inputRef = useRef();\n    useEffect(() => {\n        if (isFocused && inputRef.current) {\n            inputRef.current.focus();\n        }\n    }, [isFocused]);\n    return (\n        <>\n            <StyledLabel htmlFor={id}>{children || label}</StyledLabel>\n            &nbsp;\n            <StyledInput\n                id={id}\n                type={type}\n                value={value}\n                onChange={onInputChange}\n                ref={inputRef} // 指令式\n                // autoFocus={isFocused} // 声明式\n            />\n        </>\n    );\n};\n\nexport default InputWithLabel;\n\nconst StyledLabel = styled.label`\n    padding-left: 5px;\n    font-size: 2.4rem;\n`;\n\nconst StyledInput = styled.input`\n    border: none;\n    border-bottom: 1px solid #171212;\n    background-color: transparent;\n    outline-width: inherit;\n\n    font-size: 2.4rem;\n`;\n","import styled from 'styled-components';\nconst PressedBtn = ({ handleSearchSubmit }) => {\n    return (\n        <Container>\n            <Base>\n                <ButtonWrapper ontouchstart=\"\" onClick={handleSearchSubmit}>\n                    <ButtonInsilde className=\"btn-side\"></ButtonInsilde>\n                    <ButtonMain className=\"btn\">S</ButtonMain>\n                </ButtonWrapper>\n            </Base>\n        </Container>\n    );\n};\n\nconst Container = styled.div`\n    width: 24rem;\n    height: 24rem;\n    transform: rotateX(40deg);\n    transform-style: preserve-3d;\n`;\nconst Base = styled.div`\n    background: #bbb;\n    border-radius: 1.6rem;\n    box-shadow: 0 -0.6rem 0px #777777 inset;\n    display: flex;\n    display: -webkit-flex;\n    justify-content: center;\n    -webkit-justify-content: center;\n    align-items: center;\n    -webkit-align-items: center;\n    position: relative;\n    transform-style: preserve-3d;\n    width: 24rem;\n    height: 24rem;\n`;\nconst ButtonWrapper = styled.div`\n    border: 0;\n    background: transparent;\n    cursor: pointer;\n    -webkit-appearance: none;\n\n    &:active .btn {\n        transform: translateZ(1px);\n    }\n\n    &:active .btn-side {\n        transform: translateZ(0);\n    }\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst ButtonMain = styled.div`\n    background: #444 linear-gradient(#888888, transparent 50%);\n    border-radius: 1.6rem;\n    box-shadow: 0 0 0.5rem #888888 inset;\n    color: #f80;\n    display: block;\n    font: 17.85rem Asap;\n    font-weight: bold;\n    width: 21rem;\n    height: 21rem;\n    transform: translateZ(36px);\n    transition: all 0.05s;\n    text-align: center;\n    text-shadow: 0 0 24px #f80, 0 -2.4px 0 #222222, 0 2.4px 0 #ffbb33;\n    z-index: 2;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n`;\n\nconst ButtonInsilde = styled.div`\n    background: #333333\n        linear-gradient(\n            90deg,\n            #666666,\n            transparent 8%,\n            transparent 92%,\n            #666666\n        );\n    border-radius: 0 0 12px 12px;\n    box-shadow: 0 -4.8px 4.8px #222 inset;\n    position: absolute;\n    bottom: 8%;\n    transform: rotateX(-60deg);\n    transform-origin: 0 100%;\n    transition: all 0.05s;\n    width: 210px;\n    height: 31.5px;\n    z-index: 1;\n`;\n\nexport default PressedBtn;\n","import InputWithLabel from '@/components/input-with-label';\nimport PressedBtn from '@/components/pressed-button';\nimport styled from 'styled-components';\nconst SearchForm = ({ handleSearchSubmit, searchTerm, handleSearchInput }) => {\n    return (\n        <StyledSearchForm onSubmit={handleSearchSubmit}>\n            <InputWithLabel\n                id=\"search\"\n                label=\"Search\"\n                isFocused\n                value={searchTerm}\n                onInputChange={handleSearchInput}\n            >\n                <strong>Search</strong>\n            </InputWithLabel>\n            {/* <StyledButtonLarge type=\"submit\" disabled={!searchTerm}>\n                <Check width=\"18px\" height=\"18px\" />\n            </StyledButtonLarge> */}\n            <PressedBtn handleSearchSubmit={handleSearchSubmit} />\n        </StyledSearchForm>\n    );\n};\n\nconst StyledSearchForm = styled.form`\n    padding: 10px 0 20px 0;\n    display: flex;\n    align-items: baseline;\n`;\n\nconst StyledButton = styled.button`\n    background: transparent;\n    border: 1px solid #607d8b;\n    padding: 5px;\n    cursor: pointer;\n\n    outline-width: inherit;\n\n    transition: all 0.1s ease-in;\n\n    &:hover {\n        background: #ff5722;\n        color: #fff;\n    }\n`;\n\nexport default SearchForm;\n","import { useSemiPersistent } from '@/utils/use-semi-persistent';\nimport axios from 'axios';\nimport { useCallback, useEffect, useReducer, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport LastSearches from './last-searches';\nimport List from './list';\nimport SearchForm from './search-form';\n\nconst ProjectList = () => {\n    const [searchTerm, setSearchTerm] = useSemiPersistent('search', 'react');\n\n    const API_BASE = 'https://hn.algolia.com/api/v1';\n    const API_SEARCH = '/search';\n    const PARAM_SEARCH = 'query=';\n    const PARAM_PAGE = 'page=';\n    const API_ENDPOINT = 'https://hn.algolia.com/api/v1/search?query=';\n\n    const getUrl = (searchTerm, page) =>\n        `${API_BASE}${API_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}`;\n\n    const [urls, setUrls] = useState([getUrl(searchTerm, 0)]);\n\n    const storiesReducer = (state, action) => {\n        switch (action.type) {\n            case 'STORIES_FETCH_INIT':\n                return {\n                    ...state,\n                    isLoading: true,\n                    isError: false,\n                };\n            case 'STORIES_FETCH_SUCCESS':\n                return {\n                    ...state,\n                    isLoading: false,\n                    isError: false,\n                    data:\n                        action.payload.page === 0\n                            ? action.payload.list\n                            : state.data.concat(action.payload.list),\n                    page: action.payload.page,\n                };\n            case 'STORIES_FETCH_FAILURE':\n                return {\n                    ...state,\n                    isLoading: false,\n                    isError: true,\n                };\n            case 'REMOVE_STORY':\n                return {\n                    ...state,\n                    data: state.data.filter(\n                        story => action.payload.objectID !== story.objectID\n                    ),\n                };\n            default:\n                throw new Error();\n        }\n    };\n    const [stories, dispatchStories] = useReducer(storiesReducer, {\n        data: [],\n        page: 0,\n        isLoading: false,\n        isError: false,\n    });\n\n    const handleSearchInput = event => {\n        setSearchTerm(event.target.value);\n    };\n\n    const handleSearchSubmit = event => {\n        handleSearch(searchTerm, 0);\n        event.preventDefault();\n    };\n\n    // search history\n    const extractSearchTerm = url =>\n        url\n            .substring(url.lastIndexOf('?') + 1, url.lastIndexOf('&'))\n            .replace(PARAM_SEARCH, '');\n    const getLastSearches = urls =>\n        urls\n            .reduce((result, url, index) => {\n                const searchTerm = extractSearchTerm(url);\n\n                if (index === 0) {\n                    return result.concat(searchTerm);\n                }\n\n                const previousSearchTerm = result[result.length - 1];\n\n                if (searchTerm === previousSearchTerm) {\n                    return result;\n                } else {\n                    return result.concat(searchTerm);\n                }\n            }, [])\n            .slice(-6)\n            .slice(0, -1);\n\n    const handleLastSearch = searchTerm => {\n        setSearchTerm(searchTerm);\n        handleSearch(searchTerm, 0);\n    };\n    const handleSearch = (searchTerm, page) => {\n        const url = getUrl(searchTerm, page);\n        setUrls(urls.concat(url));\n    };\n    const lastSearches = getLastSearches(urls);\n\n    const handleFetchStories = useCallback(async () => {\n        dispatchStories({ type: 'STORIES_FETCH_INIT' });\n        try {\n            const lastUrl = urls[urls.length - 1];\n            const result = await axios.get(lastUrl);\n\n            dispatchStories({\n                type: 'STORIES_FETCH_SUCCESS',\n                payload: {\n                    list: result.data.hits,\n                    page: result.data.page,\n                },\n            });\n        } catch {\n            dispatchStories({ type: 'STORIES_FETCH_FAILURE' });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [urls]);\n\n    useEffect(() => {\n        handleFetchStories();\n    }, [handleFetchStories]);\n\n    const handleRemoveStory = item => {\n        dispatchStories({\n            type: 'REMOVE_STORY',\n            payload: item,\n        });\n    };\n\n    const searchedStories = stories.data.filter(\n        story =>\n            story.title &&\n            story.title.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    // header style controller\n    const [isScrolled, setIsScrolled] = useState(false);\n    const mainContainer = useRef();\n\n    document.addEventListener('scroll', () => {\n        if (mainContainer.current) {\n            const elemTop = mainContainer.current.getBoundingClientRect().top;\n            if (elemTop < 100) {\n                setIsScrolled(true);\n            } else if (elemTop > 100 && isScrolled) {\n                setIsScrolled(false);\n            }\n        }\n    });\n\n    const handleMore = () => {\n        const lastUrl = urls[urls.length - 1];\n        const searchTerm = extractSearchTerm(lastUrl);\n        handleSearch(searchTerm, stories.page + 1);\n    };\n\n    return (\n        <>\n            <StyledHeadlinePrimary active={isScrolled}>\n                My Hacker Stories\n            </StyledHeadlinePrimary>\n\n            <StyledContainer ref={mainContainer}>\n                {stories.isError && (\n                    <p style={{ color: 'red' }}>Something is error!!!</p>\n                )}\n\n                <SearchForm\n                    handleSearchSubmit={handleSearchSubmit}\n                    searchTerm={searchTerm}\n                    handleSearchInput={handleSearchInput}\n                />\n\n                <br />\n                <LastSearches\n                    lastSearches={lastSearches}\n                    handleLastSearch={handleLastSearch}\n                />\n                <br />\n                <List list={searchedStories} onRemoveItem={handleRemoveStory} />\n                {stories.isLoading ? (\n                    <p>Loading...</p>\n                ) : (\n                    <button type=\"button\" onClick={handleMore}>\n                        More\n                    </button>\n                )}\n            </StyledContainer>\n        </>\n    );\n};\n\nconst StyledContainer = styled.div`\n    min-height: 100vw;\n    padding: 20px;\n\n    background: #83a4d4;\n    background: linear-gradient(to left, #b6fbff, #83a4d4);\n\n    color: #171212;\n    font-size: 1.6rem;\n`;\n\nconst StyledHeadlinePrimary = styled.div`\n    padding: 2rem;\n    z-index: 99;\n\n    height: 8rem;\n    font-size: 4.8rem;\n    font-weight: 300;\n    letter-spacing: 0.2rem;\n    position: sticky;\n    top: 0;\n    background: #83a4d4;\n    background: linear-gradient(to left, #b6fbff, #83a4d4);\n    box-shadow: ${props => (props.active ? ' 0 5px 20px -10px #000' : '')};\n`;\n\nexport default ProjectList;\n","import { useEffect, useState } from 'react';\nexport const useSemiPersistent = (key, initialState) => {\n    const [value, setValue] = useState(\n        localStorage.getItem(key) || initialState\n    );\n    useEffect(() => {\n        localStorage.setItem(key, value);\n    }, [value, key]);\n    return [value, setValue];\n};\n","import ProjectListScreen from '@/screens/project-list/index.jsx';\nimport './App.css';\n\nconst App = () => {\n    return <ProjectListScreen />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}